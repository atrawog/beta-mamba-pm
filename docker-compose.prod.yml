services:

  db:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: quetz
    volumes:
      - ./data/prod/postgres:/var/lib/postgresql/data

  quetz:
    build: .
    depends_on:
      - db
    labels:
      - "traefik.enable=true"
      # Router for quant-prod-quetz-4.mamba.pm
      - "traefik.http.routers.quetz.rule=Host(`quant-prod-quetz-4.mamba.pm`)"
      - "traefik.http.routers.quetz.entrypoints=websecure"
      - "traefik.http.routers.quetz.tls.certresolver=myresolver"
      - "traefik.http.services.quetz.loadbalancer.server.port=8000"
      # Router for quant-prod-quetz-4-repo.mamba.pm with rewrite rule
      - "traefik.http.routers.quetz-repo.rule=Host(`quant-prod-quetz-4-repo.mamba.pm`)"
      - "traefik.http.routers.quetz-repo.entrypoints=websecure"
      - "traefik.http.routers.quetz-repo.tls.certresolver=myresolver"
      - "traefik.http.routers.quetz-repo.middlewares=rewrite-path"
    volumes:
      - .:/workspace:cached
      - ./data/prod/quetz:/data
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock

  nginx:
    image: nginx
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./data/prod/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./data/prod/letsencrypt/:/etc/letsencrypt/:ro
    depends_on:
      - quetz