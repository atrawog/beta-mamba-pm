services:
  traefik:
    image: traefik:v2.4
    command:
      - "--api.insecure=true"
      - "--providers.docker"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.email=atrawog@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./data/prod/letsencrypt:/letsencrypt"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

  db:
    image: postgres:13
    environment:
      POSTGRES_USER: quetz
      POSTGRES_PASSWORD: quetz
      POSTGRES_DB: quetz
    volumes:
      - "./data/prod/postgres:/var/lib/postgresql/data"

  quetz:
    build: .
    depends_on:
      - db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.quetz.rule=Host(`quant-prod-quetz-4.mamba.pm`)"
      - "traefik.http.routers.quetz.entrypoints=websecure"
      - "traefik.http.routers.quetz.tls.certresolver=myresolver"
      - "traefik.http.services.quetz.loadbalancer.server.port=8000"
    volumes:
      - "./data/prod/quetz:/data"
